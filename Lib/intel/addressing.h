/*****************************************************************************************************************
* Copyright (c) 2012 Khalid Ali Al-Kooheji                                                                       *
*                                                                                                                *
* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and              *
* associated documentation files (the "Software"), to deal in the Software without restriction, including        *
* without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell        *
* copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the       *
* following conditions:                                                                                          *
*                                                                                                                *
* The above copyright notice and this permission notice shall be included in all copies or substantial           *
* portions of the Software.                                                                                      *
*                                                                                                                *
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT          *
* LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.          *
* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, * DAMAGES OR OTHER LIABILITY,      *
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE            *
* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                                         *
*****************************************************************************************************************/
#pragma once

namespace reccore {
namespace intel {

/*
namespace ModRM {

enum EffectiveAddress {
  kBX_p_SI = 0,               
	kBX_p_DI,               
	kBP_p_SI,               
	kBP_p_DI,               
	kSI,                    
	kDI,                    
	kDisp16,                 
	kBX,                    

	kBX_p_SI_p_disp8,       
	kBX_p_DI_p_disp8,       
	kBP_p_DI_p_disp8,       
	kBP_p_SI_p_disp8,       
	kSI_p_disp8,           
	kDI_p_disp8,            
	kBP_p_disp8,            
	kBX_p_disp8,            
				
	kBX_p_SI_p_disp16,      
	kBX_p_DI_p_disp16,      
	kBP_p_SI_p_disp16,      
	kBP_p_DI_p_disp16,      
	kSI_p_disp16,           
	kDI_p_disp16,           
	kBP_p_disp16,           
	kBX_p_disp16,           
			
	kEAX,                   
	kECX,                   
	kEDX,                   
	kEBX,                   
	kSIB,                                    
	kDisp32,
	kESI,                                       
	kEDI,                                       

	kEAX_p_disp8,                               
	kECX_p_disp8,                               
	kEDX_p_disp8,                               
	kEBX_p_disp8,                               
	kSIB_p_disp8,                            
	kEBP_p_disp8,                               
	kESI_p_disp8,                               
	kEDI_p_disp8,                               
				
	kEAX_p_disp32,                              
	kECX_p_disp32,                              
	kEDX_p_disp32,                              
	kEBX_p_disp32,                              
	kSIB_p_disp32,                           
	kEBP_p_disp32,                                       
	kESI_p_disp32,                                       
	kEDI_p_disp32,                                       
	kReg
};

struct AddressForm {
  char text[25]; 
  union { 
    struct { 
      uint8_t rm:3; 
      uint8_t reg:3; 
      uint8_t mod:2; 
    };
   uint8_t raw;
  };
};



const AddressForm Invalid={"invalid",255,255};
const AddressForm array[] = {
	{"[BX+SI]",0,0,0},
	{"[BX+DI]",1,0,0},
	{"[BP+SI]",2,0,0},
	{"[BP+DI]",3,0,0},
	{"[SI]",4,0,0},
	{"[DI]",5,0,0},
	{"disp16",6,0,0},
	{"[BX]",7,0,0},

	{"[BX+SI]+disp8",0,0,1},
	{"[BX+DI]+disp8",1,0,1},
	{"[BP+DI]+disp8",2,0,1},
	{"[BP+SI]+disp8",3,0,1},
	{"[SI]+disp8",4,0,1},
	{"[DI]+disp8",5,0,1},
	{"[BP]+disp8",6,0,1},
	{"[BX]+disp8",7,0,1},
				
	{"[BX+SI]+disp16",0,0,2},
	{"[BX+DI]+disp16",1,0,2},
	{"[BP+SI]+disp16",2,0,2},
	{"[BP+DI]+disp16",3,0,2},
	{"[SI]+disp16",4,0,2},
	{"[DI]+disp16",5,0,2},
	{"[BP]+disp16",6,0,2},
	{"[BX]+disp16",7,0,2},
				
	{"[EAX]",0,0,0},
	{"[ECX]",1,0,0},
	{"[EDX]",2,0,0},
	{"[EBX]",3,0,0},
	{"[--][--]",4,0,0},
	{"disp32",5,0,0},
	{"[ESI]",6,0,0},
	{"[EDI]",7,0,0},

	{"[EAX]+disp8",0,0,1},
	{"[ECX]+disp8",1,0,1},
	{"[EDX]+disp8",2,0,1},
	{"[EBX]+disp8",3,0,1},
	{"[--][--]+disp8",4,0,1},
	{"[EBP]+disp8",5,0,1},
	{"[ESI]+disp8",6,0,1},
	{"[EDI]+disp8",7,0,1},
				
	{"[EAX]+disp32",0,0,2},
	{"[ECX]+disp32",1,0,2},
	{"[EDX]+disp32",2,0,2},
	{"[EBX]+disp32",3,0,2},
	{"[--][--]+disp32",4,0,2},
	{"[EBP]+disp32",5,0,2},
	{"[ESI]+disp32",6,0,2},
	{"[EDI]+disp32",7,0,2},
				
	{"Reg",3,0}
};

}

namespace SIB {

enum EffectiveAddress {
	kEAX=0,
	kECX,
	kEDX,
	kEBX,
	kNone0,
	kEBP,
	kESI,
	kEDI,

	kEAX_m_2,
	kECX_m_2,
	kEDX_m_2,
	kEBX_m_2,
	kNone1,
	kEBP_m_2,
	kESI_m_2,
	kEDI_m_2,
				
	kEAX_m_4,
	kECX_m_4,
	kEDX_m_4,
	kEBX_m_4,
	kNone2,
	kEBP_m_4,
	kESI_m_4,
	kEDI_m_4,
				
	kEAX_m_8,
	kECX_m_8,
	kEDX_m_8,
	kEBX_m_8,
	kNone3,
	kEBP_m_8,
	kESI_m_8,
	kEDI_m_8,  
};

struct AddressForm {
  char text[25]; 
  union { 
    struct { 
      uint8_t base:3; 
      uint8_t index:3; 
      uint8_t ss:2; 
    };
   uint8_t raw;
  };
};


const AddressForm Invalid = {"invalid",255,255};
const AddressForm array[32] ={
	{"[EAX]",0,0,0},
	{"[ECX]",0,1,0},
	{"[EDX]",0,2,0},
	{"[EBX]",0,3,0},
	{"none",0,4,0},
	{"[EBP]",0,5,0},
	{"[ESI]",0,6,0},
	{"[EDI]",0,7,0},

	{"[EAX*2]",0,0,1},
	{"[ECX*2]",0,1,1},
	{"[EDX*2]",0,2,1},
	{"[EBX*2]",0,3,1},
	{"none",0,4,1},
	{"[EBP*2]",0,5,1},
	{"[ESI*2]",0,6,1},
	{"[EDI*2]",0,7,1},
				
	{"[EAX*4]",0,0,2},
	{"[ECX*4]",0,1,2},
	{"[EDX*4]",0,2,2},
	{"[EBX*4]",0,3,2},
	{"none",0,4,2},
	{"[EBP*4]",0,5,2},
	{"[ESI*4]",0,6,2},
	{"[EDI*4]",0,7,2},
				
	{"[EAX*8]",0,0,3},
	{"[ECX*8]",0,1,3},
	{"[EDX*8]",0,2,3},
	{"[EBX*8]",0,3,3},
	{"none",0,4,3},
	{"[EBP*8]",0,5,3},
	{"[ESI*8]",0,6,3},
	{"[EDI*8]",0,7,3}
};

}






struct EA {

  

  EA(ModRM::EffectiveAddress modrm_ea, uint8_t reg, SIB::EffectiveAddress sib_ea, uint8_t base, intptr_t displacement) : modrm_ea(modrm_ea) , sib_ea(sib_ea),displacement(displacement) {
    modrm = ModRM::array[modrm_ea];     
    sib = SIB::array[sib_ea];
    this->modrm.reg = reg;    
    this->sib.base = base;  
  }
  EA(ModRM::EffectiveAddress modrm_ea, uint8_t reg, SIB::EffectiveAddress sib_ea, uint8_t base) : modrm_ea(modrm_ea) , sib_ea(sib_ea) {
    modrm = ModRM::array[modrm_ea];     
    sib = SIB::array[sib_ea];
    this->modrm.reg = reg;    
    this->sib.base = base;
  }
  EA(ModRM::EffectiveAddress modrm_ea, uint8_t reg, intptr_t displacement) : modrm_ea(modrm_ea),displacement(displacement)  {
    modrm = ModRM::array[modrm_ea];    
    this->modrm.reg = reg;
  }
  EA(ModRM::EffectiveAddress modrm_ea, uint8_t reg) : modrm_ea(modrm_ea)  {
    modrm = ModRM::array[modrm_ea];
    this->modrm.reg = reg;
  }
  EA(ModRM::EffectiveAddress modrm_ea) : modrm_ea(modrm_ea)  {
    modrm = ModRM::array[modrm_ea];
    this->modrm.reg = 0;
  }
  ModRM::EffectiveAddress modrm_ea;
  ModRM::AddressForm modrm;
  SIB::EffectiveAddress sib_ea;
  SIB::AddressForm sib;
  int32_t displacement;
};







*/




struct EAAddressForm {
  char text[25]; 
  uint8_t rm; 
  uint8_t reg; 
  uint8_t mod; 
  uint8_t base; 
  uint8_t index; 
  uint8_t ss; 
};


const EAAddressForm addressforms[] = {
  {"[EAX]",0,0,0,0,0,0},
	{"[ECX]",1,0,0,0,0,0},
	{"[EDX]",2,0,0,0,0,0},
	{"[EBX]",3,0,0,0,0,0},

  {"[EAX+EAX]",4,0,0,0,0,0},
	{"[EAX+ECX]",4,0,0,0,1,0},
	{"[EAX+EDX]",4,0,0,0,2,0},
	{"[EAX+EBX]",4,0,0,0,3,0},
	{"none",4,0,0,0,4,0},
	{"[EAX+EBP]",4,0,0,0,5,0},
	{"[EAX+ESI]",4,0,0,0,6,0},
	{"[EAX+EDI]",4,0,0,0,7,0},
	{"[EAX+EAX*2]",4,0,0,0,0,1},
	{"[EAX+ECX*2]",4,0,0,0,1,1},
	{"[EAX+EDX*2]",4,0,0,0,2,1},
	{"[EAX+EBX*2]",4,0,0,0,3,1},
	{"none",4,0,0,0,4,1},
	{"[EAX+EBP*2]",4,0,0,0,5,1},
	{"[EAX+ESI*2]",4,0,0,0,6,1},
	{"[EAX+EDI*2]",4,0,0,0,7,1},
	{"[EAX+EAX*4]",4,0,0,0,0,2},
	{"[EAX+ECX*4]",4,0,0,0,1,2},
	{"[EAX+EDX*4]",4,0,0,0,2,2},
	{"[EAX+EBX*4]",4,0,0,0,3,2},
	{"none",4,0,0,0,4,2},
	{"[EAX+EBP*4]",4,0,0,0,5,2},
	{"[EAX+ESI*4]",4,0,0,0,6,2},
	{"[EAX+EDI*4]",4,0,0,0,7,2},
	{"[EAX+EAX*8]",4,0,0,0,0,3},
	{"[EAX+ECX*8]",4,0,0,0,1,3},
	{"[EAX+EDX*8]",4,0,0,0,2,3},
	{"[EAX+EBX*8]",4,0,0,0,3,3},
	{"none",4,0,0,0,4,3},
	{"[EAX+EBP*8]",4,0,0,0,5,3},
	{"[EAX+ESI*8]",4,0,0,0,6,3},
	{"[EAX+EDI*8]",4,0,0,0,7,3},
  {"[ECX+EAX]",4,0,0,1,0,0},
	{"[ECX+ECX]",4,0,0,1,1,0},
	{"[ECX+EDX]",4,0,0,1,2,0},
	{"[ECX+EBX]",4,0,0,1,3,0},
	{"none",4,0,0,1,4,0},
	{"[ECX+EBP]",4,0,0,1,5,0},
	{"[ECX+ESI]",4,0,0,1,6,0},
	{"[ECX+EDI]",4,0,0,1,7,0},
	{"[ECX+EAX*2]",4,0,0,1,0,1},
	{"[ECX+ECX*2]",4,0,0,1,1,1},
	{"[ECX+EDX*2]",4,0,0,1,2,1},
	{"[ECX+EBX*2]",4,0,0,1,3,1},
	{"none",4,0,0,1,4,1},
	{"[ECX+EBP*2]",4,0,0,1,5,1},
	{"[ECX+ESI*2]",4,0,0,1,6,1},
	{"[ECX+EDI*2]",4,0,0,1,7,1},
	{"[ECX+EAX*4]",4,0,0,1,0,2},
	{"[ECX+ECX*4]",4,0,0,1,1,2},
	{"[ECX+EDX*4]",4,0,0,1,2,2},
	{"[ECX+EBX*4]",4,0,0,1,3,2},
	{"none",4,0,0,1,4,2},
	{"[ECX+EBP*4]",4,0,0,1,5,2},
	{"[ECX+ESI*4]",4,0,0,1,6,2},
	{"[ECX+EDI*4]",4,0,0,1,7,2},
	{"[ECX+EAX*8]",4,0,0,1,0,3},
	{"[ECX+ECX*8]",4,0,0,1,1,3},
	{"[ECX+EDX*8]",4,0,0,1,2,3},
	{"[ECX+EBX*8]",4,0,0,1,3,3},
	{"none",4,0,0,1,4,3},
	{"[ECX+EBP*8]",4,0,0,1,5,3},
	{"[ECX+ESI*8]",4,0,0,1,6,3},
	{"[ECX+EDI*8]",4,0,0,1,7,3},
  {"[EDX+EAX]",4,0,0,2,0,0},
	{"[EDX+ECX]",4,0,0,2,1,0},
	{"[EDX+EDX]",4,0,0,2,2,0},
	{"[EDX+EBX]",4,0,0,2,3,0},
	{"none",4,0,0,2,4,0},
	{"[EDX+EBP]",4,0,0,2,5,0},
	{"[EDX+ESI]",4,0,0,2,6,0},
	{"[EDX+EDI]",4,0,0,2,7,0},
	{"[EDX+EAX*2]",4,0,0,2,0,1},
	{"[EDX+ECX*2]",4,0,0,2,1,1},
	{"[EDX+EDX*2]",4,0,0,2,2,1},
	{"[EDX+EBX*2]",4,0,0,2,3,1},
	{"none",4,0,0,2,4,1},
	{"[EDX+EBP*2]",4,0,0,2,5,1},
	{"[EDX+ESI*2]",4,0,0,2,6,1},
	{"[EDX+EDI*2]",4,0,0,2,7,1},
	{"[EDX+EAX*4]",4,0,0,2,0,2},
	{"[EDX+ECX*4]",4,0,0,2,1,2},
	{"[EDX+EDX*4]",4,0,0,2,2,2},
	{"[EDX+EBX*4]",4,0,0,2,3,2},
	{"none",4,0,0,2,4,2},
	{"[EDX+EBP*4]",4,0,0,2,5,2},
	{"[EDX+ESI*4]",4,0,0,2,6,2},
	{"[EDX+EDI*4]",4,0,0,2,7,2},
	{"[EDX+EAX*8]",4,0,0,2,0,3},
	{"[EDX+ECX*8]",4,0,0,2,1,3},
	{"[EDX+EDX*8]",4,0,0,2,2,3},
	{"[EDX+EBX*8]",4,0,0,2,3,3},
	{"none",4,0,0,2,4,3},
	{"[EDX+EBP*8]",4,0,0,2,5,3},
	{"[EDX+ESI*8]",4,0,0,2,6,3},
	{"[EDX+EDI*8]",4,0,0,2,7,3},
  {"[EBX+EAX]",4,0,0,3,0,0},
	{"[EBX+ECX]",4,0,0,3,1,0},
	{"[EBX+EDX]",4,0,0,3,2,0},
	{"[EBX+EBX]",4,0,0,3,3,0},
	{"none",4,0,0,3,4,0},
	{"[EBX+EBP]",4,0,0,3,5,0},
	{"[EBX+ESI]",4,0,0,3,6,0},
	{"[EBX+EDI]",4,0,0,3,7,0},
	{"[EBX+EAX*2]",4,0,0,3,0,1},
	{"[EBX+ECX*2]",4,0,0,3,1,1},
	{"[EBX+EDX*2]",4,0,0,3,2,1},
	{"[EBX+EBX*2]",4,0,0,3,3,1},
	{"none",4,0,0,3,4,1},
	{"[EBX+EBP*2]",4,0,0,3,5,1},
	{"[EBX+ESI*2]",4,0,0,3,6,1},
	{"[EBX+EDI*2]",4,0,0,3,7,1},
	{"[EBX+EAX*4]",4,0,0,3,0,2},
	{"[EBX+ECX*4]",4,0,0,3,1,2},
	{"[EBX+EDX*4]",4,0,0,3,2,2},
	{"[EBX+EBX*4]",4,0,0,3,3,2},
	{"none",4,0,0,3,4,2},
	{"[EBX+EBP*4]",4,0,0,3,5,2},
	{"[EBX+ESI*4]",4,0,0,3,6,2},
	{"[EBX+EDI*4]",4,0,0,3,7,2},
	{"[EBX+EAX*8]",4,0,0,3,0,3},
	{"[EBX+ECX*8]",4,0,0,3,1,3},
	{"[EBX+EDX*8]",4,0,0,3,2,3},
	{"[EBX+EBX*8]",4,0,0,3,3,3},
	{"none",4,0,0,3,4,3},
	{"[EBX+EBP*8]",4,0,0,3,5,3},
	{"[EBX+ESI*8]",4,0,0,3,6,3},
	{"[EBX+EDI*8]",4,0,0,3,7,3},
  {"[ESP+EAX]",4,0,0,4,0,0},
	{"[ESP+ECX]",4,0,0,4,1,0},
	{"[ESP+EDX]",4,0,0,4,2,0},
	{"[ESP+EBX]",4,0,0,4,3,0},
	{"none",4,0,0,4,4,0},
	{"[ESP+EBP]",4,0,0,4,5,0},
	{"[ESP+ESI]",4,0,0,4,6,0},
	{"[ESP+EDI]",4,0,0,4,7,0},
	{"[ESP+EAX*2]",4,0,0,4,0,1},
	{"[ESP+ECX*2]",4,0,0,4,1,1},
	{"[ESP+EDX*2]",4,0,0,4,2,1},
	{"[ESP+EBX*2]",4,0,0,4,3,1},
	{"none",4,0,0,4,4,1},
	{"[ESP+EBP*2]",4,0,0,4,5,1},
	{"[ESP+ESI*2]",4,0,0,4,6,1},
	{"[ESP+EDI*2]",4,0,0,4,7,1},
	{"[ESP+EAX*4]",4,0,0,4,0,2},
	{"[ESP+ECX*4]",4,0,0,4,1,2},
	{"[ESP+EDX*4]",4,0,0,4,2,2},
	{"[ESP+EBX*4]",4,0,0,4,3,2},
	{"none",4,0,0,4,4,2},
	{"[ESP+EBP*4]",4,0,0,4,5,2},
	{"[ESP+ESI*4]",4,0,0,4,6,2},
	{"[ESP+EDI*4]",4,0,0,4,7,2},
	{"[ESP+EAX*8]",4,0,0,4,0,3},
	{"[ESP+ECX*8]",4,0,0,4,1,3},
	{"[ESP+EDX*8]",4,0,0,4,2,3},
	{"[ESP+EBX*8]",4,0,0,4,3,3},
	{"none",4,0,0,4,4,3},
	{"[ESP+EBP*8]",4,0,0,4,5,3},
	{"[ESP+ESI*8]",4,0,0,4,6,3},
	{"[ESP+EDI*8]",4,0,0,4,7,3},
  /*{"[EAX+disp32]",4,0,0,5,0,0},
	{"[ECX+disp32]",4,0,0,5,1,0},
	{"[EDX+disp32]",4,0,0,5,2,0},
	{"[EBX+disp32]",4,0,0,5,3,0},
	{"none",4,0,0,5,4,0},
	{"[EBP+disp32]",4,0,0,5,5,0},
	{"[ESI+disp32]",4,0,0,5,6,0},
	{"[EDI+disp32]",4,0,0,5,7,0},
	{"[EAX*2+disp32]",4,0,0,5,0,1},
	{"[ECX*2+disp32]",4,0,0,5,1,1},
	{"[EDX*2+disp32]",4,0,0,5,2,1},
	{"[EBX*2+disp32]",4,0,0,5,3,1},
	{"none",4,0,0,5,4,1},
	{"[EBP*2+disp32]",4,0,0,5,5,1},
	{"[ESI*2+disp32]",4,0,0,5,6,1},
	{"[EDI*2+disp32]",4,0,0,5,7,1},
	{"[EAX*4+disp32]",4,0,0,5,0,2},
	{"[ECX*4+disp32]",4,0,0,5,1,2},
	{"[EDX*4+disp32]",4,0,0,5,2,2},
	{"[EBX*4+disp32]",4,0,0,5,3,2},
	{"none",4,0,0,5,4,2},
	{"[EBP*4+disp32]",4,0,0,5,5,2},
	{"[ESI*4+disp32]",4,0,0,5,6,2},
	{"[EDI*4+disp32]",4,0,0,5,7,2},
	{"[EAX*8+disp32]",4,0,0,5,0,3},
	{"[ECX*8+disp32]",4,0,0,5,1,3},
	{"[EDX*8+disp32]",4,0,0,5,2,3},
	{"[EBX*8+disp32]",4,0,0,5,3,3},
	{"none",4,0,0,5,4,3},
	{"[EBP*8+disp32]",4,0,0,5,5,3},
	{"[ESI*8+disp32]",4,0,0,5,6,3},
	{"[EDI*8+disp32]",4,0,0,5,7,3},*/
  {"[ESI+EAX]",4,0,0,6,0,0},
	{"[ESI+ECX]",4,0,0,6,1,0},
	{"[ESI+EDX]",4,0,0,6,2,0},
	{"[ESI+EBX]",4,0,0,6,3,0},
	{"none",4,0,0,6,4,0},
	{"[ESI+EBP]",4,0,0,6,5,0},
	{"[ESI+ESI]",4,0,0,6,6,0},
	{"[ESI+EDI]",4,0,0,6,7,0},
	{"[ESI+EAX*2]",4,0,0,6,0,1},
	{"[ESI+ECX*2]",4,0,0,6,1,1},
	{"[ESI+EDX*2]",4,0,0,6,2,1},
	{"[ESI+EBX*2]",4,0,0,6,3,1},
	{"none",4,0,0,6,4,1},
	{"[ESI+EBP*2]",4,0,0,6,5,1},
	{"[ESI+ESI*2]",4,0,0,6,6,1},
	{"[ESI+EDI*2]",4,0,0,6,7,1},
	{"[ESI+EAX*4]",4,0,0,6,0,2},
	{"[ESI+ECX*4]",4,0,0,6,1,2},
	{"[ESI+EDX*4]",4,0,0,6,2,2},
	{"[ESI+EBX*4]",4,0,0,6,3,2},
	{"none",4,0,0,6,4,2},
	{"[ESI+EBP*4]",4,0,0,6,5,2},
	{"[ESI+ESI*4]",4,0,0,6,6,2},
	{"[ESI+EDI*4]",4,0,0,6,7,2},
	{"[ESI+EAX*8]",4,0,0,6,0,3},
	{"[ESI+ECX*8]",4,0,0,6,1,3},
	{"[ESI+EDX*8]",4,0,0,6,2,3},
	{"[ESI+EBX*8]",4,0,0,6,3,3},
	{"none",4,0,0,6,4,3},
	{"[ESI+EBP*8]",4,0,0,6,5,3},
	{"[ESI+ESI*8]",4,0,0,6,6,3},
	{"[ESI+EDI*8]",4,0,0,6,7,3},
  {"[EDI+EAX]",4,0,0,7,0,0},
	{"[EDI+ECX]",4,0,0,7,1,0},
	{"[EDI+EDX]",4,0,0,7,2,0},
	{"[EDI+EBX]",4,0,0,7,3,0},
	{"none",4,0,0,7,4,0},
	{"[EDI+EBP]",4,0,0,7,5,0},
	{"[EDI+ESI]",4,0,0,7,6,0},
	{"[EDI+EDI]",4,0,0,7,7,0},
	{"[EDI+EAX*2]",4,0,0,7,0,1},
	{"[EDI+ECX*2]",4,0,0,7,1,1},
	{"[EDI+EDX*2]",4,0,0,7,2,1},
	{"[EDI+EBX*2]",4,0,0,7,3,1},
	{"none",4,0,0,7,4,1},
	{"[EDI+EBP*2]",4,0,0,7,5,1},
	{"[EDI+ESI*2]",4,0,0,7,6,1},
	{"[EDI+EDI*2]",4,0,0,7,7,1},
	{"[EDI+EAX*4]",4,0,0,7,0,2},
	{"[EDI+ECX*4]",4,0,0,7,1,2},
	{"[EDI+EDX*4]",4,0,0,7,2,2},
	{"[EDI+EBX*4]",4,0,0,7,3,2},
	{"none",4,0,0,7,4,2},
	{"[EDI+EBP*4]",4,0,0,7,5,2},
	{"[EDI+ESI*4]",4,0,0,7,6,2},
	{"[EDI+EDI*4]",4,0,0,7,7,2},
	{"[EDI+EAX*8]",4,0,0,7,0,3},
	{"[EDI+ECX*8]",4,0,0,7,1,3},
	{"[EDI+EDX*8]",4,0,0,7,2,3},
	{"[EDI+EBX*8]",4,0,0,7,3,3},
	{"none",4,0,0,7,4,3},
	{"[EDI+EBP*8]",4,0,0,7,5,3},
	{"[EDI+ESI*8]",4,0,0,7,6,3},
	{"[EDI+EDI*8]",4,0,0,7,7,3},


	{"[disp32]",5,0,0,0,0,0},
	{"[ESI]",6,0,0,0,0,0},
	{"[EDI]",7,0,0,0,0,0},

	{"[EAX+disp8]",0,0,1,0,0,0},
	{"[ECX+disp8]",1,0,1,0,0,0},
	{"[EDX+disp8]",2,0,1,0,0,0},
	{"[EBX+disp8]",3,0,1,0,0,0},

  {"[EAX+EAX+disp8]",4,0,1,0,0,0},
	{"[EAX+ECX+disp8]",4,0,1,0,1,0},
	{"[EAX+EDX+disp8]",4,0,1,0,2,0},
	{"[EAX+EBX+disp8]",4,0,1,0,3,0},
	{"none",4,0,1,0,4,0},
	{"[EAX+EBP+disp8]",4,0,1,0,5,0},
	{"[EAX+ESI+disp8]",4,0,1,0,6,0},
	{"[EAX+EDI+disp8]",4,0,1,0,7,0},
	{"[EAX+EAX*2+disp8]",4,0,1,0,0,1},
	{"[EAX+ECX*2+disp8]",4,0,1,0,1,1},
	{"[EAX+EDX*2+disp8]",4,0,1,0,2,1},
	{"[EAX+EBX*2+disp8]",4,0,1,0,3,1},
	{"none",4,0,1,0,4,1},
	{"[EAX+EBP*2+disp8]",4,0,1,0,5,1},
	{"[EAX+ESI*2+disp8]",4,0,1,0,6,1},
	{"[EAX+EDI*2+disp8]",4,0,1,0,7,1},
	{"[EAX+EAX*4+disp8]",4,0,1,0,0,2},
	{"[EAX+ECX*4+disp8]",4,0,1,0,1,2},
	{"[EAX+EDX*4+disp8]",4,0,1,0,2,2},
	{"[EAX+EBX*4+disp8]",4,0,1,0,3,2},
	{"none",4,0,1,0,4,2},
	{"[EAX+EBP*4+disp8]",4,0,1,0,5,2},
	{"[EAX+ESI*4+disp8]",4,0,1,0,6,2},
	{"[EAX+EDI*4+disp8]",4,0,1,0,7,2},
	{"[EAX+EAX*8+disp8]",4,0,1,0,0,3},
	{"[EAX+ECX*8+disp8]",4,0,1,0,1,3},
	{"[EAX+EDX*8+disp8]",4,0,1,0,2,3},
	{"[EAX+EBX*8+disp8]",4,0,1,0,3,3},
	{"none",4,0,1,0,4,3},
	{"[EAX+EBP*8+disp8]",4,0,1,0,5,3},
	{"[EAX+ESI*8+disp8]",4,0,1,0,6,3},
	{"[EAX+EDI*8+disp8]",4,0,1,0,7,3},
  {"[ECX+EAX+disp8]",4,0,1,1,0,0},
	{"[ECX+ECX+disp8]",4,0,1,1,1,0},
	{"[ECX+EDX+disp8]",4,0,1,1,2,0},
	{"[ECX+EBX+disp8]",4,0,1,1,3,0},
	{"none",4,0,1,1,4,0},
	{"[ECX+EBP+disp8]",4,0,1,1,5,0},
	{"[ECX+ESI+disp8]",4,0,1,1,6,0},
	{"[ECX+EDI+disp8]",4,0,1,1,7,0},
	{"[ECX+EAX*2+disp8]",4,0,1,1,0,1},
	{"[ECX+ECX*2+disp8]",4,0,1,1,1,1},
	{"[ECX+EDX*2+disp8]",4,0,1,1,2,1},
	{"[ECX+EBX*2+disp8]",4,0,1,1,3,1},
	{"none",4,0,1,1,4,1},
	{"[ECX+EBP*2+disp8]",4,0,1,1,5,1},
	{"[ECX+ESI*2+disp8]",4,0,1,1,6,1},
	{"[ECX+EDI*2+disp8]",4,0,1,1,7,1},
	{"[ECX+EAX*4+disp8]",4,0,1,1,0,2},
	{"[ECX+ECX*4+disp8]",4,0,1,1,1,2},
	{"[ECX+EDX*4+disp8]",4,0,1,1,2,2},
	{"[ECX+EBX*4+disp8]",4,0,1,1,3,2},
	{"none",4,0,1,1,4,2},
	{"[ECX+EBP*4+disp8]",4,0,1,1,5,2},
	{"[ECX+ESI*4+disp8]",4,0,1,1,6,2},
	{"[ECX+EDI*4+disp8]",4,0,1,1,7,2},
	{"[ECX+EAX*8+disp8]",4,0,1,1,0,3},
	{"[ECX+ECX*8+disp8]",4,0,1,1,1,3},
	{"[ECX+EDX*8+disp8]",4,0,1,1,2,3},
	{"[ECX+EBX*8+disp8]",4,0,1,1,3,3},
	{"none",4,0,1,1,4,3},
	{"[ECX+EBP*8+disp8]",4,0,1,1,5,3},
	{"[ECX+ESI*8+disp8]",4,0,1,1,6,3},
	{"[ECX+EDI*8+disp8]",4,0,1,1,7,3},
  {"[EDX+EAX+disp8]",4,0,1,2,0,0},
	{"[EDX+ECX+disp8]",4,0,1,2,1,0},
	{"[EDX+EDX+disp8]",4,0,1,2,2,0},
	{"[EDX+EBX+disp8]",4,0,1,2,3,0},
	{"none",4,0,1,2,4,0},
	{"[EDX+EBP+disp8]",4,0,1,2,5,0},
	{"[EDX+ESI+disp8]",4,0,1,2,6,0},
	{"[EDX+EDI+disp8]",4,0,1,2,7,0},
	{"[EDX+EAX*2+disp8]",4,0,1,2,0,1},
	{"[EDX+ECX*2+disp8]",4,0,1,2,1,1},
	{"[EDX+EDX*2+disp8]",4,0,1,2,2,1},
	{"[EDX+EBX*2+disp8]",4,0,1,2,3,1},
	{"none",4,0,1,2,4,1},
	{"[EDX+EBP*2+disp8]",4,0,1,2,5,1},
	{"[EDX+ESI*2+disp8]",4,0,1,2,6,1},
	{"[EDX+EDI*2+disp8]",4,0,1,2,7,1},
	{"[EDX+EAX*4+disp8]",4,0,1,2,0,2},
	{"[EDX+ECX*4+disp8]",4,0,1,2,1,2},
	{"[EDX+EDX*4+disp8]",4,0,1,2,2,2},
	{"[EDX+EBX*4+disp8]",4,0,1,2,3,2},
	{"none",4,0,1,2,4,2},
	{"[EDX+EBP*4+disp8]",4,0,1,2,5,2},
	{"[EDX+ESI*4+disp8]",4,0,1,2,6,2},
	{"[EDX+EDI*4+disp8]",4,0,1,2,7,2},
	{"[EDX+EAX*8+disp8]",4,0,1,2,0,3},
	{"[EDX+ECX*8+disp8]",4,0,1,2,1,3},
	{"[EDX+EDX*8+disp8]",4,0,1,2,2,3},
	{"[EDX+EBX*8+disp8]",4,0,1,2,3,3},
	{"none",4,0,1,2,4,3},
	{"[EDX+EBP*8+disp8]",4,0,1,2,5,3},
	{"[EDX+ESI*8+disp8]",4,0,1,2,6,3},
	{"[EDX+EDI*8+disp8]",4,0,1,2,7,3},
  {"[EBX+EAX+disp8]",4,0,1,3,0,0},
	{"[EBX+ECX+disp8]",4,0,1,3,1,0},
	{"[EBX+EDX+disp8]",4,0,1,3,2,0},
	{"[EBX+EBX+disp8]",4,0,1,3,3,0},
	{"none",4,0,1,3,4,0},
	{"[EBX+EBP+disp8]",4,0,1,3,5,0},
	{"[EBX+ESI+disp8]",4,0,1,3,6,0},
	{"[EBX+EDI+disp8]",4,0,1,3,7,0},
	{"[EBX+EAX*2+disp8]",4,0,1,3,0,1},
	{"[EBX+ECX*2+disp8]",4,0,1,3,1,1},
	{"[EBX+EDX*2+disp8]",4,0,1,3,2,1},
	{"[EBX+EBX*2+disp8]",4,0,1,3,3,1},
	{"none",4,0,1,3,4,1},
	{"[EBX+EBP*2+disp8]",4,0,1,3,5,1},
	{"[EBX+ESI*2+disp8]",4,0,1,3,6,1},
	{"[EBX+EDI*2+disp8]",4,0,1,3,7,1},
	{"[EBX+EAX*4+disp8]",4,0,1,3,0,2},
	{"[EBX+ECX*4+disp8]",4,0,1,3,1,2},
	{"[EBX+EDX*4+disp8]",4,0,1,3,2,2},
	{"[EBX+EBX*4+disp8]",4,0,1,3,3,2},
	{"none",4,0,1,3,4,2},
	{"[EBX+EBP*4+disp8]",4,0,1,3,5,2},
	{"[EBX+ESI*4+disp8]",4,0,1,3,6,2},
	{"[EBX+EDI*4+disp8]",4,0,1,3,7,2},
	{"[EBX+EAX*8+disp8]",4,0,1,3,0,3},
	{"[EBX+ECX*8+disp8]",4,0,1,3,1,3},
	{"[EBX+EDX*8+disp8]",4,0,1,3,2,3},
	{"[EBX+EBX*8+disp8]",4,0,1,3,3,3},
	{"none",4,0,1,3,4,3},
	{"[EBX+EBP*8+disp8]",4,0,1,3,5,3},
	{"[EBX+ESI*8+disp8]",4,0,1,3,6,3},
	{"[EBX+EDI*8+disp8]",4,0,1,3,7,3},
  {"[ESP+EAX+disp8]",4,0,1,4,0,0},
	{"[ESP+ECX+disp8]",4,0,1,4,1,0},
	{"[ESP+EDX+disp8]",4,0,1,4,2,0},
	{"[ESP+EBX+disp8]",4,0,1,4,3,0},
	{"none",4,0,1,4,4,0},
	{"[ESP+EBP+disp8]",4,0,1,4,5,0},
	{"[ESP+ESI+disp8]",4,0,1,4,6,0},
	{"[ESP+EDI+disp8]",4,0,1,4,7,0},
	{"[ESP+EAX*2+disp8]",4,0,1,4,0,1},
	{"[ESP+ECX*2+disp8]",4,0,1,4,1,1},
	{"[ESP+EDX*2+disp8]",4,0,1,4,2,1},
	{"[ESP+EBX*2+disp8]",4,0,1,4,3,1},
	{"none",4,0,1,4,4,1},
	{"[ESP+EBP*2+disp8]",4,0,1,4,5,1},
	{"[ESP+ESI*2+disp8]",4,0,1,4,6,1},
	{"[ESP+EDI*2+disp8]",4,0,1,4,7,1},
	{"[ESP+EAX*4+disp8]",4,0,1,4,0,2},
	{"[ESP+ECX*4+disp8]",4,0,1,4,1,2},
	{"[ESP+EDX*4+disp8]",4,0,1,4,2,2},
	{"[ESP+EBX*4+disp8]",4,0,1,4,3,2},
	{"none",4,0,1,4,4,2},
	{"[ESP+EBP*4+disp8]",4,0,1,4,5,2},
	{"[ESP+ESI*4+disp8]",4,0,1,4,6,2},
	{"[ESP+EDI*4+disp8]",4,0,1,4,7,2},
	{"[ESP+EAX*8+disp8]",4,0,1,4,0,3},
	{"[ESP+ECX*8+disp8]",4,0,1,4,1,3},
	{"[ESP+EDX*8+disp8]",4,0,1,4,2,3},
	{"[ESP+EBX*8+disp8]",4,0,1,4,3,3},
	{"none",4,0,1,4,4,3},
	{"[ESP+EBP*8+disp8]",4,0,1,4,5,3},
	{"[ESP+ESI*8+disp8]",4,0,1,4,6,3},
	{"[ESP+EDI*8+disp8]",4,0,1,4,7,3},
  {"[EBP+EAX+disp8]",4,0,1,5,0,0},
	{"[EBP+ECX+disp8]",4,0,1,5,1,0},
	{"[EBP+EDX+disp8]",4,0,1,5,2,0},
	{"[EBP+EBX+disp8]",4,0,1,5,3,0},
	{"none",4,0,1,5,4,0},
	{"[EBP+EBP+disp8]",4,0,1,5,5,0},
	{"[EBP+ESI+disp8]",4,0,1,5,6,0},
	{"[EBP+EDI+disp8]",4,0,1,5,7,0},
	{"[EBP+EAX*2+disp8]",4,0,1,5,0,1},
	{"[EBP+ECX*2+disp8]",4,0,1,5,1,1},
	{"[EBP+EDX*2+disp8]",4,0,1,5,2,1},
	{"[EBP+EBX*2+disp8]",4,0,1,5,3,1},
	{"none",4,0,1,5,4,1},
	{"[EBP+EBP*2+disp8]",4,0,1,5,5,1},
	{"[EBP+ESI*2+disp8]",4,0,1,5,6,1},
	{"[EBP+EDI*2+disp8]",4,0,1,5,7,1},
	{"[EBP+EAX*4+disp8]",4,0,1,5,0,2},
	{"[EBP+ECX*4+disp8]",4,0,1,5,1,2},
	{"[EBP+EDX*4+disp8]",4,0,1,5,2,2},
	{"[EBP+EBX*4+disp8]",4,0,1,5,3,2},
	{"none",4,0,1,5,4,2},
	{"[EBP+EBP*4+disp8]",4,0,1,5,5,2},
	{"[EBP+ESI*4+disp8]",4,0,1,5,6,2},
	{"[EBP+EDI*4+disp8]",4,0,1,5,7,2},
	{"[EBP+EAX*8+disp8]",4,0,1,5,0,3},
	{"[EBP+ECX*8+disp8]",4,0,1,5,1,3},
	{"[EBP+EDX*8+disp8]",4,0,1,5,2,3},
	{"[EBP+EBX*8+disp8]",4,0,1,5,3,3},
	{"none",4,0,1,5,4,3},
	{"[EBP+EBP*8+disp8]",4,0,1,5,5,3},
	{"[EBP+ESI*8+disp8]",4,0,1,5,6,3},
	{"[EBP+EDI*8+disp8]",4,0,1,5,7,3},
  {"[ESI+EAX+disp8]",4,0,1,6,0,0},
	{"[ESI+ECX+disp8]",4,0,1,6,1,0},
	{"[ESI+EDX+disp8]",4,0,1,6,2,0},
	{"[ESI+EBX+disp8]",4,0,1,6,3,0},
	{"none",4,0,1,6,4,0},
	{"[ESI+EBP+disp8]",4,0,1,6,5,0},
	{"[ESI+ESI+disp8]",4,0,1,6,6,0},
	{"[ESI+EDI+disp8]",4,0,1,6,7,0},
	{"[ESI+EAX*2+disp8]",4,0,1,6,0,1},
	{"[ESI+ECX*2+disp8]",4,0,1,6,1,1},
	{"[ESI+EDX*2+disp8]",4,0,1,6,2,1},
	{"[ESI+EBX*2+disp8]",4,0,1,6,3,1},
	{"none",4,0,1,6,4,1},
	{"[ESI+EBP*2+disp8]",4,0,1,6,5,1},
	{"[ESI+ESI*2+disp8]",4,0,1,6,6,1},
	{"[ESI+EDI*2+disp8]",4,0,1,6,7,1},
	{"[ESI+EAX*4+disp8]",4,0,1,6,0,2},
	{"[ESI+ECX*4+disp8]",4,0,1,6,1,2},
	{"[ESI+EDX*4+disp8]",4,0,1,6,2,2},
	{"[ESI+EBX*4+disp8]",4,0,1,6,3,2},
	{"none",4,0,1,6,4,2},
	{"[ESI+EBP*4+disp8]",4,0,1,6,5,2},
	{"[ESI+ESI*4+disp8]",4,0,1,6,6,2},
	{"[ESI+EDI*4+disp8]",4,0,1,6,7,2},
	{"[ESI+EAX*8+disp8]",4,0,1,6,0,3},
	{"[ESI+ECX*8+disp8]",4,0,1,6,1,3},
	{"[ESI+EDX*8+disp8]",4,0,1,6,2,3},
	{"[ESI+EBX*8+disp8]",4,0,1,6,3,3},
	{"none",4,0,1,6,4,3},
	{"[ESI+EBP*8+disp8]",4,0,1,6,5,3},
	{"[ESI+ESI*8+disp8]",4,0,1,6,6,3},
	{"[ESI+EDI*8+disp8]",4,0,1,6,7,3},
  {"[EDI+EAX+disp8]",4,0,1,7,0,0},
	{"[EDI+ECX+disp8]",4,0,1,7,1,0},
	{"[EDI+EDX+disp8]",4,0,1,7,2,0},
	{"[EDI+EBX+disp8]",4,0,1,7,3,0},
	{"none",4,0,1,7,4,0},
	{"[EDI+EBP+disp8]",4,0,1,7,5,0},
	{"[EDI+ESI+disp8]",4,0,1,7,6,0},
	{"[EDI+EDI+disp8]",4,0,1,7,7,0},
	{"[EDI+EAX*2+disp8]",4,0,1,7,0,1},
	{"[EDI+ECX*2+disp8]",4,0,1,7,1,1},
	{"[EDI+EDX*2+disp8]",4,0,1,7,2,1},
	{"[EDI+EBX*2+disp8]",4,0,1,7,3,1},
	{"none",4,0,1,7,4,1},
	{"[EDI+EBP*2+disp8]",4,0,1,7,5,1},
	{"[EDI+ESI*2+disp8]",4,0,1,7,6,1},
	{"[EDI+EDI*2+disp8]",4,0,1,7,7,1},
	{"[EDI+EAX*4+disp8]",4,0,1,7,0,2},
	{"[EDI+ECX*4+disp8]",4,0,1,7,1,2},
	{"[EDI+EDX*4+disp8]",4,0,1,7,2,2},
	{"[EDI+EBX*4+disp8]",4,0,1,7,3,2},
	{"none",4,0,1,7,4,2},
	{"[EDI+EBP*4+disp8]",4,0,1,7,5,2},
	{"[EDI+ESI*4+disp8]",4,0,1,7,6,2},
	{"[EDI+EDI*4+disp8]",4,0,1,7,7,2},
	{"[EDI+EAX*8+disp8]",4,0,1,7,0,3},
	{"[EDI+ECX*8+disp8]",4,0,1,7,1,3},
	{"[EDI+EDX*8+disp8]",4,0,1,7,2,3},
	{"[EDI+EBX*8+disp8]",4,0,1,7,3,3},
	{"none",4,0,1,7,4,3},
	{"[EDI+EBP*8+disp8]",4,0,1,7,5,3},
	{"[EDI+ESI*8+disp8]",4,0,1,7,6,3},
	{"[EDI+EDI*8+disp8]",4,0,1,7,7,3},




	{"[EBP+disp8]",5,0,1,0,0,0},
	{"[ESI+disp8]",6,0,1,0,0,0},
	{"[EDI+disp8]",7,0,1,0,0,0},
				
	{"[EAX+disp32]",0,0,2,0,0,0},
	{"[ECX+disp32]",1,0,2,0,0,0},
	{"[EDX+disp32]",2,0,2,0,0,0},
	{"[EBX+disp32]",3,0,2,0,0,0},



  {"[EAX+EAX+disp32]",4,0,2,0,0,0},
	{"[EAX+ECX+disp32]",4,0,2,0,1,0},
	{"[EAX+EDX+disp32]",4,0,2,0,2,0},
	{"[EAX+EBX+disp32]",4,0,2,0,3,0},
	{"none",4,0,2,0,4,0},
	{"[EAX+EBP+disp32]",4,0,2,0,5,0},
	{"[EAX+ESI+disp32]",4,0,2,0,6,0},
	{"[EAX+EDI+disp32]",4,0,2,0,7,0},
	{"[EAX+EAX*2+disp32]",4,0,2,0,0,1},
	{"[EAX+ECX*2+disp32]",4,0,2,0,1,1},
	{"[EAX+EDX*2+disp32]",4,0,2,0,2,1},
	{"[EAX+EBX*2+disp32]",4,0,2,0,3,1},
	{"none",4,0,2,0,4,1},
	{"[EAX+EBP*2+disp32]",4,0,2,0,5,1},
	{"[EAX+ESI*2+disp32]",4,0,2,0,6,1},
	{"[EAX+EDI*2+disp32]",4,0,2,0,7,1},
	{"[EAX+EAX*4+disp32]",4,0,2,0,0,2},
	{"[EAX+ECX*4+disp32]",4,0,2,0,1,2},
	{"[EAX+EDX*4+disp32]",4,0,2,0,2,2},
	{"[EAX+EBX*4+disp32]",4,0,2,0,3,2},
	{"none",4,0,2,0,4,2},
	{"[EAX+EBP*4+disp32]",4,0,2,0,5,2},
	{"[EAX+ESI*4+disp32]",4,0,2,0,6,2},
	{"[EAX+EDI*4+disp32]",4,0,2,0,7,2},
	{"[EAX+EAX*8+disp32]",4,0,2,0,0,3},
	{"[EAX+ECX*8+disp32]",4,0,2,0,1,3},
	{"[EAX+EDX*8+disp32]",4,0,2,0,2,3},
	{"[EAX+EBX*8+disp32]",4,0,2,0,3,3},
	{"none",4,0,2,0,4,3},
	{"[EAX+EBP*8+disp32]",4,0,2,0,5,3},
	{"[EAX+ESI*8+disp32]",4,0,2,0,6,3},
	{"[EAX+EDI*8+disp32]",4,0,2,0,7,3},
  {"[ECX+EAX+disp32]",4,0,2,1,0,0},
	{"[ECX+ECX+disp32]",4,0,2,1,1,0},
	{"[ECX+EDX+disp32]",4,0,2,1,2,0},
	{"[ECX+EBX+disp32]",4,0,2,1,3,0},
	{"none",4,0,2,1,4,0},
	{"[ECX+EBP+disp32]",4,0,2,1,5,0},
	{"[ECX+ESI+disp32]",4,0,2,1,6,0},
	{"[ECX+EDI+disp32]",4,0,2,1,7,0},
	{"[ECX+EAX*2+disp32]",4,0,2,1,0,1},
	{"[ECX+ECX*2+disp32]",4,0,2,1,1,1},
	{"[ECX+EDX*2+disp32]",4,0,2,1,2,1},
	{"[ECX+EBX*2+disp32]",4,0,2,1,3,1},
	{"none",4,0,2,1,4,1},
	{"[ECX+EBP*2+disp32]",4,0,2,1,5,1},
	{"[ECX+ESI*2+disp32]",4,0,2,1,6,1},
	{"[ECX+EDI*2+disp32]",4,0,2,1,7,1},
	{"[ECX+EAX*4+disp32]",4,0,2,1,0,2},
	{"[ECX+ECX*4+disp32]",4,0,2,1,1,2},
	{"[ECX+EDX*4+disp32]",4,0,2,1,2,2},
	{"[ECX+EBX*4+disp32]",4,0,2,1,3,2},
	{"none",4,0,2,1,4,2},
	{"[ECX+EBP*4+disp32]",4,0,2,1,5,2},
	{"[ECX+ESI*4+disp32]",4,0,2,1,6,2},
	{"[ECX+EDI*4+disp32]",4,0,2,1,7,2},
	{"[ECX+EAX*8+disp32]",4,0,2,1,0,3},
	{"[ECX+ECX*8+disp32]",4,0,2,1,1,3},
	{"[ECX+EDX*8+disp32]",4,0,2,1,2,3},
	{"[ECX+EBX*8+disp32]",4,0,2,1,3,3},
	{"none",4,0,2,1,4,3},
	{"[ECX+EBP*8+disp32]",4,0,2,1,5,3},
	{"[ECX+ESI*8+disp32]",4,0,2,1,6,3},
	{"[ECX+EDI*8+disp32]",4,0,2,1,7,3},
  {"[EDX+EAX+disp32]",4,0,2,2,0,0},
	{"[EDX+ECX+disp32]",4,0,2,2,1,0},
	{"[EDX+EDX+disp32]",4,0,2,2,2,0},
	{"[EDX+EBX+disp32]",4,0,2,2,3,0},
	{"none",4,0,2,2,4,0},
	{"[EDX+EBP+disp32]",4,0,2,2,5,0},
	{"[EDX+ESI+disp32]",4,0,2,2,6,0},
	{"[EDX+EDI+disp32]",4,0,2,2,7,0},
	{"[EDX+EAX*2+disp32]",4,0,2,2,0,1},
	{"[EDX+ECX*2+disp32]",4,0,2,2,1,1},
	{"[EDX+EDX*2+disp32]",4,0,2,2,2,1},
	{"[EDX+EBX*2+disp32]",4,0,2,2,3,1},
	{"none",4,0,2,2,4,1},
	{"[EDX+EBP*2+disp32]",4,0,2,2,5,1},
	{"[EDX+ESI*2+disp32]",4,0,2,2,6,1},
	{"[EDX+EDI*2+disp32]",4,0,2,2,7,1},
	{"[EDX+EAX*4+disp32]",4,0,2,2,0,2},
	{"[EDX+ECX*4+disp32]",4,0,2,2,1,2},
	{"[EDX+EDX*4+disp32]",4,0,2,2,2,2},
	{"[EDX+EBX*4+disp32]",4,0,2,2,3,2},
	{"none",4,0,2,2,4,2},
	{"[EDX+EBP*4+disp32]",4,0,2,2,5,2},
	{"[EDX+ESI*4+disp32]",4,0,2,2,6,2},
	{"[EDX+EDI*4+disp32]",4,0,2,2,7,2},
	{"[EDX+EAX*8+disp32]",4,0,2,2,0,3},
	{"[EDX+ECX*8+disp32]",4,0,2,2,1,3},
	{"[EDX+EDX*8+disp32]",4,0,2,2,2,3},
	{"[EDX+EBX*8+disp32]",4,0,2,2,3,3},
	{"none",4,0,2,2,4,3},
	{"[EDX+EBP*8+disp32]",4,0,2,2,5,3},
	{"[EDX+ESI*8+disp32]",4,0,2,2,6,3},
	{"[EDX+EDI*8+disp32]",4,0,2,2,7,3},
  {"[EBX+EAX+disp32]",4,0,2,3,0,0},
	{"[EBX+ECX+disp32]",4,0,2,3,1,0},
	{"[EBX+EDX+disp32]",4,0,2,3,2,0},
	{"[EBX+EBX+disp32]",4,0,2,3,3,0},
	{"none",4,0,2,3,4,0},
	{"[EBX+EBP+disp32]",4,0,2,3,5,0},
	{"[EBX+ESI+disp32]",4,0,2,3,6,0},
	{"[EBX+EDI+disp32]",4,0,2,3,7,0},
	{"[EBX+EAX*2+disp32]",4,0,2,3,0,1},
	{"[EBX+ECX*2+disp32]",4,0,2,3,1,1},
	{"[EBX+EDX*2+disp32]",4,0,2,3,2,1},
	{"[EBX+EBX*2+disp32]",4,0,2,3,3,1},
	{"none",4,0,2,3,4,1},
	{"[EBX+EBP*2+disp32]",4,0,2,3,5,1},
	{"[EBX+ESI*2+disp32]",4,0,2,3,6,1},
	{"[EBX+EDI*2+disp32]",4,0,2,3,7,1},
	{"[EBX+EAX*4+disp32]",4,0,2,3,0,2},
	{"[EBX+ECX*4+disp32]",4,0,2,3,1,2},
	{"[EBX+EDX*4+disp32]",4,0,2,3,2,2},
	{"[EBX+EBX*4+disp32]",4,0,2,3,3,2},
	{"none",4,0,2,3,4,2},
	{"[EBX+EBP*4+disp32]",4,0,2,3,5,2},
	{"[EBX+ESI*4+disp32]",4,0,2,3,6,2},
	{"[EBX+EDI*4+disp32]",4,0,2,3,7,2},
	{"[EBX+EAX*8+disp32]",4,0,2,3,0,3},
	{"[EBX+ECX*8+disp32]",4,0,2,3,1,3},
	{"[EBX+EDX*8+disp32]",4,0,2,3,2,3},
	{"[EBX+EBX*8+disp32]",4,0,2,3,3,3},
	{"none",4,0,2,3,4,3},
	{"[EBX+EBP*8+disp32]",4,0,2,3,5,3},
	{"[EBX+ESI*8+disp32]",4,0,2,3,6,3},
	{"[EBX+EDI*8+disp32]",4,0,2,3,7,3},
  {"[ESP+EAX+disp32]",4,0,2,4,0,0},
	{"[ESP+ECX+disp32]",4,0,2,4,1,0},
	{"[ESP+EDX+disp32]",4,0,2,4,2,0},
	{"[ESP+EBX+disp32]",4,0,2,4,3,0},
	{"none",4,0,2,4,4,0},
	{"[ESP+EBP+disp32]",4,0,2,4,5,0},
	{"[ESP+ESI+disp32]",4,0,2,4,6,0},
	{"[ESP+EDI+disp32]",4,0,2,4,7,0},
	{"[ESP+EAX*2+disp32]",4,0,2,4,0,1},
	{"[ESP+ECX*2+disp32]",4,0,2,4,1,1},
	{"[ESP+EDX*2+disp32]",4,0,2,4,2,1},
	{"[ESP+EBX*2+disp32]",4,0,2,4,3,1},
	{"none",4,0,2,4,4,1},
	{"[ESP+EBP*2+disp32]",4,0,2,4,5,1},
	{"[ESP+ESI*2+disp32]",4,0,2,4,6,1},
	{"[ESP+EDI*2+disp32]",4,0,2,4,7,1},
	{"[ESP+EAX*4+disp32]",4,0,2,4,0,2},
	{"[ESP+ECX*4+disp32]",4,0,2,4,1,2},
	{"[ESP+EDX*4+disp32]",4,0,2,4,2,2},
	{"[ESP+EBX*4+disp32]",4,0,2,4,3,2},
	{"none",4,0,2,4,4,2},
	{"[ESP+EBP*4+disp32]",4,0,2,4,5,2},
	{"[ESP+ESI*4+disp32]",4,0,2,4,6,2},
	{"[ESP+EDI*4+disp32]",4,0,2,4,7,2},
	{"[ESP+EAX*8+disp32]",4,0,2,4,0,3},
	{"[ESP+ECX*8+disp32]",4,0,2,4,1,3},
	{"[ESP+EDX*8+disp32]",4,0,2,4,2,3},
	{"[ESP+EBX*8+disp32]",4,0,2,4,3,3},
	{"none",4,0,2,4,4,3},
	{"[ESP+EBP*8+disp32]",4,0,2,4,5,3},
	{"[ESP+ESI*8+disp32]",4,0,2,4,6,3},
	{"[ESP+EDI*8+disp32]",4,0,2,4,7,3},
  {"[EBP+EAX+disp32]",4,0,2,5,0,0},
	{"[EBP+ECX+disp32]",4,0,2,5,1,0},
	{"[EBP+EDX+disp32]",4,0,2,5,2,0},
	{"[EBP+EBX+disp32]",4,0,2,5,3,0},
	{"none",4,0,2,5,4,0},
	{"[EBP+EBP+disp32]",4,0,2,5,5,0},
	{"[EBP+ESI+disp32]",4,0,2,5,6,0},
	{"[EBP+EDI+disp32]",4,0,2,5,7,0},
	{"[EBP+EAX*2+disp32]",4,0,2,5,0,1},
	{"[EBP+ECX*2+disp32]",4,0,2,5,1,1},
	{"[EBP+EDX*2+disp32]",4,0,2,5,2,1},
	{"[EBP+EBX*2+disp32]",4,0,2,5,3,1},
	{"none",4,0,2,5,4,1},
	{"[EBP+EBP*2+disp32]",4,0,2,5,5,1},
	{"[EBP+ESI*2+disp32]",4,0,2,5,6,1},
	{"[EBP+EDI*2+disp32]",4,0,2,5,7,1},
	{"[EBP+EAX*4+disp32]",4,0,2,5,0,2},
	{"[EBP+ECX*4+disp32]",4,0,2,5,1,2},
	{"[EBP+EDX*4+disp32]",4,0,2,5,2,2},
	{"[EBP+EBX*4+disp32]",4,0,2,5,3,2},
	{"none",4,0,2,5,4,2},
	{"[EBP+EBP*4+disp32]",4,0,2,5,5,2},
	{"[EBP+ESI*4+disp32]",4,0,2,5,6,2},
	{"[EBP+EDI*4+disp32]",4,0,2,5,7,2},
	{"[EBP+EAX*8+disp32]",4,0,2,5,0,3},
	{"[EBP+ECX*8+disp32]",4,0,2,5,1,3},
	{"[EBP+EDX*8+disp32]",4,0,2,5,2,3},
	{"[EBP+EBX*8+disp32]",4,0,2,5,3,3},
	{"none",4,0,2,5,4,3},
	{"[EBP+EBP*8+disp32]",4,0,2,5,5,3},
	{"[EBP+ESI*8+disp32]",4,0,2,5,6,3},
	{"[EBP+EDI*8+disp32]",4,0,2,5,7,3},
  {"[ESI+EAX+disp32]",4,0,2,6,0,0},
	{"[ESI+ECX+disp32]",4,0,2,6,1,0},
	{"[ESI+EDX+disp32]",4,0,2,6,2,0},
	{"[ESI+EBX+disp32]",4,0,2,6,3,0},
	{"none",4,0,2,6,4,0},
	{"[ESI+EBP+disp32]",4,0,2,6,5,0},
	{"[ESI+ESI+disp32]",4,0,2,6,6,0},
	{"[ESI+EDI+disp32]",4,0,2,6,7,0},
	{"[ESI+EAX*2+disp32]",4,0,2,6,0,1},
	{"[ESI+ECX*2+disp32]",4,0,2,6,1,1},
	{"[ESI+EDX*2+disp32]",4,0,2,6,2,1},
	{"[ESI+EBX*2+disp32]",4,0,2,6,3,1},
	{"none",4,0,2,6,4,1},
	{"[ESI+EBP*2+disp32]",4,0,2,6,5,1},
	{"[ESI+ESI*2+disp32]",4,0,2,6,6,1},
	{"[ESI+EDI*2+disp32]",4,0,2,6,7,1},
	{"[ESI+EAX*4+disp32]",4,0,2,6,0,2},
	{"[ESI+ECX*4+disp32]",4,0,2,6,1,2},
	{"[ESI+EDX*4+disp32]",4,0,2,6,2,2},
	{"[ESI+EBX*4+disp32]",4,0,2,6,3,2},
	{"none",4,0,2,6,4,2},
	{"[ESI+EBP*4+disp32]",4,0,2,6,5,2},
	{"[ESI+ESI*4+disp32]",4,0,2,6,6,2},
	{"[ESI+EDI*4+disp32]",4,0,2,6,7,2},
	{"[ESI+EAX*8+disp32]",4,0,2,6,0,3},
	{"[ESI+ECX*8+disp32]",4,0,2,6,1,3},
	{"[ESI+EDX*8+disp32]",4,0,2,6,2,3},
	{"[ESI+EBX*8+disp32]",4,0,2,6,3,3},
	{"none",4,0,2,6,4,3},
	{"[ESI+EBP*8+disp32]",4,0,2,6,5,3},
	{"[ESI+ESI*8+disp32]",4,0,2,6,6,3},
	{"[ESI+EDI*8+disp32]",4,0,2,6,7,3},
  {"[EDI+EAX+disp32]",4,0,2,7,0,0},
	{"[EDI+ECX+disp32]",4,0,2,7,1,0},
	{"[EDI+EDX+disp32]",4,0,2,7,2,0},
	{"[EDI+EBX+disp32]",4,0,2,7,3,0},
	{"none",4,0,2,7,4,0},
	{"[EDI+EBP+disp32]",4,0,2,7,5,0},
	{"[EDI+ESI+disp32]",4,0,2,7,6,0},
	{"[EDI+EDI+disp32]",4,0,2,7,7,0},
	{"[EDI+EAX*2+disp32]",4,0,2,7,0,1},
	{"[EDI+ECX*2+disp32]",4,0,2,7,1,1},
	{"[EDI+EDX*2+disp32]",4,0,2,7,2,1},
	{"[EDI+EBX*2+disp32]",4,0,2,7,3,1},
	{"none",4,0,2,7,4,1},
	{"[EDI+EBP*2+disp32]",4,0,2,7,5,1},
	{"[EDI+ESI*2+disp32]",4,0,2,7,6,1},
	{"[EDI+EDI*2+disp32]",4,0,2,7,7,1},
	{"[EDI+EAX*4+disp32]",4,0,2,7,0,2},
	{"[EDI+ECX*4+disp32]",4,0,2,7,1,2},
	{"[EDI+EDX*4+disp32]",4,0,2,7,2,2},
	{"[EDI+EBX*4+disp32]",4,0,2,7,3,2},
	{"none",4,0,2,7,4,2},
	{"[EDI+EBP*4+disp32]",4,0,2,7,5,2},
	{"[EDI+ESI*4+disp32]",4,0,2,7,6,2},
	{"[EDI+EDI*4+disp32]",4,0,2,7,7,2},
	{"[EDI+EAX*8+disp32]",4,0,2,7,0,3},
	{"[EDI+ECX*8+disp32]",4,0,2,7,1,3},
	{"[EDI+EDX*8+disp32]",4,0,2,7,2,3},
	{"[EDI+EBX*8+disp32]",4,0,2,7,3,3},
	{"none",4,0,2,7,4,3},
	{"[EDI+EBP*8+disp32]",4,0,2,7,5,3},
	{"[EDI+ESI*8+disp32]",4,0,2,7,6,3},
	{"[EDI+EDI*8+disp32]",4,0,2,7,7,3},



	{"[EBP+disp32]",5,0,2,0,0,0},
	{"[ESI+disp32]",6,0,2,0,0,0},
	{"[EDI+disp32]",7,0,2,0,0,0},
				
	{"Reg",3,0,0,0,0}

};

struct EA {

  uint8_t mod;
  uint8_t reg;
  uint8_t rm;
  uint8_t scale;
  uint8_t index;
  uint8_t base; 

  int32_t displacement;
  
  EA(char* form) : mod(0),reg(0),rm(0),scale(0),index(0),base(0) {
    for (auto ptr = &addressforms[0]; ptr!=nullptr;++ptr) {
      if(!strcmp(form,ptr->text)) {
			  mod = ptr->mod;
        reg = ptr->reg;
        rm = ptr->rm;
        base = ptr->base;        
        index = ptr->index;
        scale = ptr->ss;
        break;
		  }
    }
  }
  EA(char* form, int32_t displacement) : EA(form) {
    this->displacement = displacement;
  }
  EA(uint8_t rm) : mod(3),reg(0),rm(rm),scale(0),index(0),base(0) {
    
  }

};



}
}
